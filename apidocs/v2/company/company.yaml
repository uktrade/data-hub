swagger: '2.0'
info:
  description: Data Hub Company API V2
  version: 1.0.0
  title: Company API
  contact:
    email: jim.smith@digital.trade.gov.uk
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

basePath: /v2

tags:
- name: public
  description: API open to Data Hub client
- name: company
  description: Belongs to company operations in Data Hub
schemes:
- https

securityDefinitions:
  OauthSecurity:
    type: oauth2
    flow: password
    tokenUrl: '/token/'
    scopes:
      user: User scope
      
security:
  - OauthSecurity:
    - user

paths:
  /company/{companyId}:
    get:
      tags:
      - company
      summary: Returns a company from the Data Hub repository
      operationId: getcompany
      description: |
        Passing in a company UUID returns a Data Hub company object
      produces:
      - application/vnd.api+json
      parameters:
      - in: path
        name: companyId
        description: UUID for a Data Hub company
        required: true
        type: string
        format: uuid
      responses:
        200:
          description: JSON API formatted company object
          schema:
            $ref: '../common/definitions.yaml#/definitions/Company'
        400:
          description: bad input parameter
        404:
          description: company does not exist
    put:
      tags:
      - company
      summary: updates a company, creating a new one if not found
      operationId: updateCompany
      description: Updates an existing company
      consumes:
      - application/vnd.api+json
      produces:
      - application/vnd.api+json
      parameters:
      - in: path
        name: companyId
        description: UUID for a Data Hub company
        type: string
        required: true
      - in: body
        name: company
        description: Company data to update
        required: true
        schema:
          $ref: '../common/definitions.yaml#/definitions/Company'
      responses:
        200:
          description: item updated
        201:
          description: item created
        400:
          description: invalid input, object invalid
  /company:
    post:
      tags:
      - company
      summary: adds a Data Hub company
      operationId: addCompany
      description: Adds a Data Hub company from a Companies House company
      consumes:
      - application/vnd.api+json
      produces:
      - application/vnd.api+json
      parameters:
      - in: body
        name: company
        description: Company to add
        required: true
        schema:
          $ref: '../common/definitions.yaml#/definitions/Company'
      responses:
        201:
          description: item created
        400:
          description: invalid input, object invalid
        409:
          description: company already exists
  /ch_company/{company_number}:
    get:
      tags:
      - company
      summary: Returns a Companies House company from the Data Hub repository
      operationId: getchcompany
      description: |
        Passing in a Companies House company number returns a Data Hub Companies House company object
      produces:
      - application/vnd.api+json
      parameters:
      - in: path
        name: company_number
        description: Companies House number
        required: true
        type: string
      responses:
        200:
          description: JSON API formatted company object
          schema:
            $ref: '../common/definitions.yaml#/definitions/CompaniesHouseCompany'
        400:
          description: bad input parameter
        404:
          description: company does not exist
# Placeholder for future expansion
#  /companies/:
#    get:
#      tags: 
#      - company
#      summary: returns a list of company objects
#      operationId: getCompanies
#      description: returns a list of companies predicated on some filter - placeholder for future expansion
#      consumes:
#      - application/vnd.api+json
#      produces:
#      - application/vnd.api+json
#      responses:
#        200:
#          description: List of companies
#          schema:
#            type: array
#            items:
#              $ref: '#/common/Company'

