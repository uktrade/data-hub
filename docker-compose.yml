version: "2"
services:
  leeloo:
    build:
      context: leeloo
    volumes:
      - ./leeloo:/app/leeloo
    environment:
      SECRET_KEY: foobar
      UI_SECRET: foobar
      DATABASE_URL: ${DATABASE_URL}
      ES_INDEX: ${ES_INDEX}
      ES_HOST: ${ES_HOST}
      ES_PORT: ${ES_PORT}
    ports:
      - "8000:8000"
    entrypoint: dockerize -wait tcp://postgres-django:5432 -timeout 20s
    links:
      - postgres-django
      - es
      - korben
    command: /app/leeloo/start.sh

  korben:
    build:
      context: korben
    environment:
      DATABASE_URL: ${DATABASE_URL}
      DATABASE_ODATA_URL: ${DATABASE_ODATA_URL}
      ES_HOST: ${ES_HOST}
      ES_PORT: ${ES_PORT}

      # magical secrets below
      CDMS_ADFS_URL: ${CDMS_ADFS_URL}
      CDMS_BASE_URL: ${CDMS_BASE_URL}
      CDMS_USERNAME: ${CDMS_USERNAME}
      CDMS_PASSWORD: ${CDMS_PASSWORD}
      CDMS_COOKIE_KEY: ${CDMS_COOKIE_KEY}
      CDMS_RSTS_URL: ${CDMS_RSTS_URL}
      CDMS_COOKIE_PATH: ${CDMS_COOKIE_PATH}
      ODATA_ENTITY_CONTAINER_KEY: ${ODATA_ENTITY_CONTAINER_KEY}
    links:
      - postgres-django
      - postgres-odata
      - es
    volumes:
      - ./docker-volumes/korben/cache:/src/cache
      - ./docker-volumes/korben/cache:/cache
    command: korben bau
    ports:
      - "8080:8080"

  postgres-odata:
    image: postgres:9.5
    restart: always
    environment:
      - POSTGRES_DB=datahub_odata
    volumes:
      - ./docker-volumes/postgres-odata:/var/lib/postgresql/data

  postgres-django:
    image: postgres:9.5
    restart: always
    environment:
      - POSTGRES_DB=datahub
    volumes:
      - ./docker-volumes/postgres-django:/var/lib/postgresql/data

  es:
    build:
      context: elasticsearch
    restart: always
    ports:
      - "9200:9200"
    volumes:
      - ./docker-volumes/es:/usr/share/elasticsearch/data
